name: CI/CD Tests
on:
  push:
    branches:
      - develop
      - dev/**
      - lts/**

jobs:
  generaltests:
    name: General Tests
    runs-on: windows-2019
    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - uses: actions/checkout@v2
      - uses: Vampire/setup-wsl@v1.2.0
        with:
          distribution: Ubuntu-20.04
          update: 'true'
          set-as-default: 'true'
          additional-packages:
            gzip
            make
            desktop-file-utils
            bats
            x11-apps
      - shell: wsl-bash -u root {0}
        run: |
          make
          make install
          make test
  debbuild:
    name: Debian
    runs-on: ubuntu-18.04
    needs: generaltests
    steps:
      - uses: actions/checkout@v2
      - name: Install Pre-requisites
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq apt-utils build-essential gzip devscripts debhelper
      - name: Build Debian Package
        run: |
          bash ./configure.sh --deb buster
          debuild -i -us -uc -b
          mkdir -p ./pkgs
          mv ../wsl*.* ./pkgs
      - uses: actions/upload-artifact@v1
        with:
          name: Debian10DEBs
          path: pkgs
  pgwbuild:
    name: Pengwin
    runs-on: ubuntu-18.04
    needs: generaltests
    steps:
      - uses: actions/checkout@v2
      - name: Install Pre-requisites
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq apt-utils build-essential gzip devscripts debhelper
      - name: Build Debian Package
        run: |
          bash ./configure.sh --deb bullseye
          debuild -i -us -uc -b
          mkdir -p ./pkgs
          mv ../wsl*.* ./pkgs
      - uses: actions/upload-artifact@v1
        with:
          name: PengwinDEBs
          path: pkgs
  pgwspdeploy:
    name: Pengwin Deploying
    needs: pgwbuild
    runs-on: ubuntu-18.04
    container: circleci/ruby:2.3-jessie
    steps:
      - name: Retrive package for deployment
        uses: actions/download-artifact@v1
        with:
          name: PengwinDEBs
      - run: gem install package_cloud
      - name: deploy to the dev
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PGW_DEV_DEPLOY_KEY }}
        run: package_cloud push whitewaterfoundry/wslu/debian/bullseye ./PengwinDEBs/*.deb --skip-errors
  rpmobsbuild:
    name: RPM - OpenSUSE Build Service
    runs-on: ubuntu-18.04
    needs: generaltests
    steps:
      - uses: actions/checkout@v2
      - name: Install Pre-requisites
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq build-essential tar
      - name: configure
        run: |
          bash ./configure.sh --rpm
          cp extras/build/rpm/obs/wslu.spec ../wslu.spec
          rm -rf *
          mkdir -p SOURCES
          mkdir -p SPECS
          cp ../wslu-*.tar.gz SOURCES
          cp ../wslu.spec SPECS
      - name: rpmbuild
        uses: ./.github/actions/rpmbuild/
      - name: moving files
        run: |
          mkdir compiled_rpms
          cp SRPMS/* compiled_rpms
          cp RPMS/noarch/* compiled_rpms
        #uses: robertdebock/rpmbuild-action@1.1.1
      - uses: actions/upload-artifact@v1
        with:
          name: OBSRPMs
          path: compiled_rpms
  rpmcoprbuild:
    name: RPM - COPR
    runs-on: ubuntu-18.04
    needs: generaltests
    steps:
      - uses: actions/checkout@v2
      - name: Install Pre-requisites
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq build-essential tar
      - name: configure
        run: |
          bash ./configure.sh --rpm
          cp extras/build/rpm/copr/wslu.spec ../wslu.spec
          rm -rf *
          mkdir -p SOURCES
          mkdir -p SPECS
          cp ../wslu-*.tar.gz SOURCES
          cp ../wslu.spec SPECS
      - name: rpmbuild
        uses: ./.github/actions/rpmbuild/
      - name: moving files
        run: |
          mkdir compiled_rpms
          cp SRPMS/* compiled_rpms
          cp RPMS/noarch/* compiled_rpms
        #uses: robertdebock/rpmbuild-action@1.1.1
      - uses: actions/upload-artifact@v1
        with:
          name: COPRRPMs
          path: compiled_rpms
  coprdeploy:
    name: COPR Deploying
    needs: rpmcoprbuild
    container: fedora:latest
    runs-on: ubuntu-latest
    steps:
        - name: Retrive package for deployment
          uses: actions/download-artifact@v1
          with:
            name: COPRRPMs
        - name: Install API token for copr-cli
          env:
            API_TOKEN_CONTENT: ${{ secrets.COPR_API_TOKEN }}
          run: |
            mkdir -p "$HOME/.config"
            echo "$API_TOKEN_CONTENT" > "$HOME/.config/copr"
        - name: Install tooling for source RPM build
          run: |
            dnf -y install @development-tools @rpm-development-tools
            dnf -y install copr-cli make
        - name: Submit the build by uploading the source RPM
          run: copr-cli build wslutilities/wslu-canary COPRRPMs/*.src.rpm
